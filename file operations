#include <iostream>
#include <fstream>
#include <cstring>
using namespace std;

struct StudentRecord {
    int roll;
    char name[10];
    char div;
    char address[10];
};

class Student {
public:
    void create();
    void display();
    int search();
    void remove();
};

void Student::create() {
    StudentRecord rec;
    ofstream fout("stud.dat", ios::out | ios::binary);
    char ans;

    do {
        cout << "\nEnter Roll No of Student: ";
        cin >> rec.roll;
        cout << "Enter Name of Student: ";
        cin >> rec.name;
        cout << "Enter Division of Student: ";
        cin >> rec.div;
        cout << "Enter Address of Student: ";
        cin >> rec.address;

        fout.write((char*)&rec, sizeof(StudentRecord));

        cout << "Do you want to add more records? (Y/N): ";
        cin >> ans;
    } while (ans == 'y' || ans == 'Y');

    fout.close();
}

void Student::display() {
    StudentRecord rec;
    ifstream fin("stud.dat", ios::in | ios::binary);

    cout << "\nContents of the file:\n";
    cout << "Roll\tName\tDiv\tAddress\n";

    while (fin.read((char*)&rec, sizeof(StudentRecord))) {
        if (rec.roll != -1) {
            cout << rec.roll << "\t" << rec.name << "\t" << rec.div << "\t" << rec.address << "\n";
        }
    }

    fin.close();
}

int Student::search() {
    StudentRecord rec;
    int roll, pos = 0;

    cout << "\nEnter Roll No to search: ";
    cin >> roll;

    ifstream fin("stud.dat", ios::in | ios::binary);

    while (fin.read((char*)&rec, sizeof(StudentRecord))) {
        if (rec.roll == roll) {
            cout << "\nRecord Found:\n";
            cout << "Roll\tName\tDiv\tAddress\n";
            cout << rec.roll << "\t" << rec.name << "\t" << rec.div << "\t" << rec.address << "\n";
            fin.close();
            return pos;
        }
        pos++;
    }

    fin.close();
    cout << "\nRecord Not Found.";
    return -1;
}

void Student::remove() {
    StudentRecord rec;
    int pos = search();

    if (pos == -1) return;

    fstream file("stud.dat", ios::in | ios::out | ios::binary);
    int offset = pos * sizeof(StudentRecord);

    file.seekp(offset, ios::beg);
    rec.roll = -1;
    strcpy(rec.name, "NULL");
    rec.div = 'N';
    strcpy(rec.address, "NULL");

    file.write((char*)&rec, sizeof(StudentRecord));
    file.close();

    cout << "\nRecord Deleted Successfully.";
}

int main() {
    Student s;
    int choice;
    char cont;

    do {
        cout << "\n***** Student Information *****";
        cout << "\n1. Create\n2. Display\n3. Delete\n4. Search\n5. Exit";
        cout << "\nEnter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1: s.create(); break;
            case 2: s.display(); break;
            case 3: s.remove(); break;
            case 4: s.search(); break;
            case 5: return 0;
            default: cout << "\nInvalid choice.";
        }

        cout << "\nDo you want to continue? (Y/N): ";
        cin >> cont;

    } while (cont == 'y' || cont == 'Y');

    return 0;
}
